@page "/registration"
@using Freedom.Auth.Web.Utils
@using Freedom.Auth.Web.Const
@using Freedom.Auth.Web.Models
@using Freedom.Auth.Web.Interfaces

@inject IUserViewService _service

<PageTitle>@SiteTitleLocal.GetTitle(Translate.CreateAccount)</PageTitle>
<div class="container">
    <EditForm Model="_form" OnValidSubmit="HandleValidSubmit" class="column">
        <DataAnnotationsValidator/>
        <div class="chapter row">
            <span class="logo icon add-user"></span>
            <p class="title">@Translate.CreateAccount</p>
        </div>
        <label>
            <input type="text" placeholder="@Translate.Name" @bind="_form.Name"/>
        </label>
        <label>
            <input type="text" placeholder="@Translate.Email" @bind="_form.Email"/>
        </label>
        <label>
            <input type="password" placeholder="@Translate.Password" @bind="_form.Password"/>
        </label>
        <label>
            <input type="password" placeholder="@Translate.ConfirmPassword" @bind="_form.ConfirmedPassword"/>
        </label>
        <ValidationSummary/>
        <button type="submit" class="icon with-text">
            <span class="icon login"></span> @Translate.Registration
        </button>
        <div class="nav-links row">
            <NavLink class="all-width" href="@Urls.BasePath">@Translate.SignIn</NavLink>
            <NavLink href="@Urls.ForgotPassword">@Translate.ForgotPassword</NavLink>
        </div>
    </EditForm>
</div>

@code {
    private readonly AddUserView _form = new();

    private async Task HandleValidSubmit()
    {
        await _service.AddAsync(_form, Providers.Freedom);
    }

}
